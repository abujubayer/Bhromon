<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>